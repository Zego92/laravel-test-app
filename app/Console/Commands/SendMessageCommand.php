<?php

namespace App\Console\Commands;

use App\Jobs\ProcessMessageJob;
use App\Manager\MessageManager;
use Illuminate\Console\Command;
use Symfony\Component\Console\Input\InputOption;

class SendMessageCommand extends Command
{
    public function __construct(protected MessageManager $messageManager)
    {
        parent::__construct();
    }

    /**
     * The name and signature of the console command.
     *
     * @var string
     */
    protected $signature = 'app:send-message';

    /**
     * The console command description.
     *
     * @var string
     */
    protected $description = 'Test the function console command';

    /**
     * Execute the console command.
     */
    public function handle()
    {
        $this->argumentsNotEmpty();

        $channel = $this->option('channel');
        if (!$this->messageManager->driverExists($channel)) {
            $this->error('Channel not supported');
            exit;
        }

        $toUser = $this->option('to');
        $type = $this->option('type');
        $body = $this->option('body');

        ProcessMessageJob::dispatch($toUser, $type, $body)->onQueue($channel);
    }

    public function argumentsNotEmpty(): void
    {
        if (is_null($this->option('channel'))) {
            $this->error('channel argument is missing');
            exit;
        }

        if (is_null($this->option('to'))) {
            $this->error('to argument is missing');
            exit;
        }

        if (is_null($this->option('type'))) {
            $this->error('type argument is missing');
            exit;
        }

        if (is_null($this->option('body'))) {
            $this->error('body argument is missing');
            exit;
        }
    }

    protected function configure()
    {
        parent::configure(); // TODO: Change the autogenerated stub

        $this->addOption(
            'channel',
            null,
            InputOption::VALUE_REQUIRED,
            'email/sms/slack/teams/webhook…etc',
            ['slack', 'sms', 'email', 'teams']
        );

        $this->addOption(
            'type',
            null,
            InputOption::VALUE_REQUIRED,
            'layout, ex. birthday digest/reminder/invitation with a link…etc',
        );

        $this->addOption(
            'body',
            null,
            InputOption::VALUE_REQUIRED,
            'text or params containing message body',
        );

        $this->addOption(
            'to',
            null,
            InputOption::VALUE_REQUIRED,
            'recipient of message',
        );
    }
}
